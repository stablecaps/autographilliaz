# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/

[tool.poetry]
name = "eyes3scribe"
version = "0.1.1"
description = "Automatically creates HTML documentation files for BASH/Shell source code using markdown & python mkdocs"
readme = "README.md"
authors = ["Stablecaps <14529342+darkpandarts@users.noreply.github.com>"]
license = "Apache Software License 2.0"
repository = "https://github.com/stablecaps/eyes3scribe"
homepage = "https://github.com/stablecaps/eyes3scribe"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = ["shell", "html", "bash", "markdown", "documentation", "automation","pandoc", "sphinx", "documentation-tool", "mkdocs", "python3", "website-builder", "website-generation", "shell-script", "markdown-to-html", "rst", "auto-documentation"]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Operating System :: POSIX :: Linux",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]

packages = [{include = "eyes3scribe"}]

[tool.poetry.group.dev.dependencies]
pygithub = "^2.2.0"

[build-system]
requires = ["poetry_core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.urls]
"Homepage" = "https://github.com/stablecaps/eyes3scribe"
"Bug Tracker" = "https://github.com/stablecaps/eyes3scribe/issues"

# [tool.poetry.scripts]
# # Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
# "eyes3scribe" = "eyes3scribe.launcher:app"

[tool.poetry.dependencies]
python = "^3.9"
wheel = "^0.42.0"
build = "^1.0.3"

[tool.poetry.dev-dependencies]
pylint = "^3.0.3"
black = "^24.1.1"
isort = {extras = ["colors"], version = "^5.13.2"}
pre-commit = "^3.6.0"
pydocstyle = "^6.3.0"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
coverage = "^7.4.1"
coverage-badge = "^1.1.0"
pytest-html = "^4.1.1"
python-semantic-release = "^8.5.2"
pynacl = "^1.5.0"
click = "8.1.7"
ghp-import = "2.1.0"
importlib-metadata = "7.0.0"
jinja2 = "3.1.2"
markdown = "3.5.1"
markupsafe = "2.1.3"
mdurl = "0.1.2"
mdutils = "1.6.0"
mergedeep = "1.3.4"
mkdocs = "1.5.3"
mkdocs-windmill-dark = "0.2.0"
packaging = "23.2"
pathspec = "0.11.2"
platformdirs = "4.1.0"
pygments = "2.17.2"
python-dateutil = "2.8.2"
pyyaml-env-tag = "0.1"
rich = "13.7.0"
six = "1.16.0"
watchdog = "3.0.0"
zipp = "3.17.0"
mkdocstrings = {extras = ["crystal", "python", "shell"], version = "^0.24.0"}
mkdocs-material = "^9.4.14"
ruamel-yaml = "^0.18.5"
mkdocs-ivory = "^0.4.6"
mkdocs-dracula-theme = "^1.0.5"
markdown-it-py = "v2.2.0"
rst-to-myst = {extras = ["sphinx"], version = "^0.4.0"}
sentry-sdk = "^1.39.1"
dotmap = "^1.3.30"
toolz = "^0.12.0"
code2flow = "2.5.1"
exceptiongroup = "1.2.0"
iniconfig = "2.0.0"
mypy-extensions = "1.0.0"
pluggy = "1.3.0"
tomli = "2.0.1"
typing-extensions = "4.8.0"

[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__", "venv", "emerge_input"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.paths]
source = ["eyes3scribe"]


[tool.coverage.report]
fail_under = 1
show_missing = true


#############################################
[tool.semantic_release]
version_variables = [
    "./__init__.py:__version__",
    "./pyproject.toml:version"
]
assets = []
version_source = "commit"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = false
tag_format = "{version}"
#
build_command = "poetry build"
#

[tool.semantic_release.branches.master]
match = "master|feat/test-semver-release-ver4|release/release-.*"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []


[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true


[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
